{"version":3,"sources":["webpack:///./src/components/Utils/Markdown.tsx","webpack:///./src/pages/magazine.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Contents","styled","div","Color","Grey700","memo","contents","pageQuery","TitleArea","animated","Grey100","Title","h1","Grey900","Date","p","NavigationButton","Button","Magazine","data","pageContext","titleAnimation","useSpring","from","opacity","transform","to","descriptionAnimation","config","duration","delay","mdx","frontmatter","body","prev","next","Page","pageName","title","Container","data-type","css","Row","Col","xs","sm","md","lg","style","date","Markdown","href","fields","path","variant","className","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"mzCAUA,IAQMA,EAAWC,IAAOC,IAAV,IAsDCC,IAAMC,SAMNC,kBApEU,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SAC1B,OACE,YAACN,EAAD,KACE,YAAC,cAAD,KAAcM,O,69BCFb,IAAMC,EAAY,aAqGnBC,EAAYP,YAAOQ,IAASP,IAAhBD,CAAH,IACcE,IAAMO,SAI7BC,EAAQV,IAAOW,GAAV,IAEAT,IAAMU,SAGXC,EAAOb,IAAOc,EAAV,KAKJC,EAAmBf,YAAOgB,IAAPhB,CAAH,KAIPiB,UAlGE,SAAC,GAAiC,cAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAClBC,EAAiBC,YAAU,CAC/BC,KAAM,CAAEC,QAAS,EAAGC,UAAW,qBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,mBAEzBE,EAAuBL,YAAU,CACrCC,KAAM,CAAEC,QAAS,EAAGC,UAAW,oBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,iBAC7BG,OAAQ,CACNC,SAAU,KAEZC,MAAO,MAGDC,EAAQZ,EAARY,IACR,IAAKA,EACH,OAAO,uCAhBwC,IAmBzCC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAed,EAAfc,KAAMC,EAASf,EAATe,KAEd,OACE,YAACC,EAAA,EAAD,CAAMC,SAAUL,EAAYM,OAC1B,YAACC,EAAA,EAAD,CACEC,YAAU,WACVC,IAAKA,YAAF,MAKH,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,YAACvC,EAAD,CAAWwC,MAAO3B,GAChB,YAACV,EAAD,KAAQqB,EAAYM,OACpB,YAAC,EAAD,KAAON,EAAYiB,OAErB,YAAC,IAAS/C,IAAV,CAAc8C,MAAOrB,GACnB,YAACuB,EAAD,CAAU5C,SAAU2B,OAI1B,YAACS,EAAA,EAAD,CACED,IAAKA,YAAF,MAIFN,GACC,YAACQ,EAAA,EAAD,KACE,YAAC3B,EAAD,CAAkBmC,KAAMhB,EAAKiB,OAAOC,KAAMC,QAAQ,qBAChD,iBACEb,IAAKA,YAAF,KAGHc,UAAU,sBALd,oBAOGpB,EAAKH,mBAPR,aAOG,EAAkBM,aAPrB,QAO8B,WAIjCJ,GACC,YAACS,EAAA,EAAD,KACE,YAAC3B,EAAD,CAAkBmC,KAAI,UAAEjB,EAAKkB,cAAP,aAAE,EAAaC,KAAMC,QAAQ,qBAAnD,oBACGpB,EAAKF,mBADR,aACG,EAAkBM,aADrB,QAC8B,SAC5B,iBACEG,IAAKA,YAAF,KAGHc,UAAU,8B,uBC/F5B,IAAMC,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkB7B,E,EAAAA,IAClB8B,EAAgBJ,EAAQ,QAAxBI,YAERH,UAAiB,SAAqB,GAKlC,IAJFI,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIb5B,OAJF,GAQMuC,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-pages-magazine-tsx-0074689a6a143490dbb5.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { memo } from 'react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Color } from 'src/constants';\n\ninterface Props {\n  contents: string;\n}\nconst MarkdownContents = ({ contents }: Props) => {\n  return (\n    <Contents>\n      <MDXRenderer>{contents}</MDXRenderer>\n    </Contents>\n  );\n};\n\nconst Contents = styled.div`\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin-top: 1.5rem;\n    margin-bottom: 1rem;\n  }\n  h2 {\n    font-size: 2rem;\n    font-weight: bold;\n  }\n\n  p {\n    font-size: 1rem;\n    line-height: 1.8;\n  }\n\n  code.language-text {\n    color: #ff3860;\n    background-color: #f9f1f3;\n    padding: 1px 4px;\n    border-radius: 4px;\n    font-size: 0.85rem;\n    &::before {\n      content: '';\n    }\n    &::after {\n      content: '';\n    }\n  }\n\n  blockquote {\n    position: relative;\n    padding: 16px;\n    font-style: italic;\n    background-color: #eee;\n    &:before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 5px;\n      height: 100%;\n      content: '';\n      background-color: #ddd;\n    }\n  }\n\n  span.gatsby-resp-image-wrapper {\n    border-radius: 8px;\n    overflow: hidden;\n    margin: 2.5rem 0 1rem;\n    & + small {\n      display: block;\n      color: ${Color.Grey700};\n      margin-bottom: 2.5rem;\n    }\n  }\n`;\n\nexport default memo(MarkdownContents);\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { graphql } from 'gatsby';\nimport Page from 'src/layout/Page';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Magazine as MagazineModel } from 'src/models';\nimport { Color } from 'src/constants';\nimport Markdown from 'src/components/Utils/Markdown';\nimport { useSpring, animated } from 'react-spring';\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    mdx(fields: { path: { eq: $path } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n\ninterface Props {\n  data: {\n    mdx: MagazineModel;\n  };\n  pageContext: {\n    next: Pick<MagazineModel, 'fields' | 'frontmatter'>;\n    prev: Pick<MagazineModel, 'fields' | 'frontmatter'>;\n  };\n}\n\nconst Magazine = ({ data, pageContext }: Props) => {\n  const titleAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateY(-30px)' },\n    to: { opacity: 1, transform: 'translateY(0)' },\n  });\n  const descriptionAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateY(30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n    config: {\n      duration: 500,\n    },\n    delay: 400,\n  });\n\n  const { mdx } = data;\n  if (!mdx) {\n    return <div>Render Error</div>;\n  }\n\n  const { frontmatter, body } = mdx;\n  const { prev, next } = pageContext;\n\n  return (\n    <Page pageName={frontmatter.title}>\n      <Container\n        data-type=\"markdown\"\n        css={css`\n          max-width: 800px;\n          margin: 3rem auto;\n        `}\n      >\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <TitleArea style={titleAnimation}>\n              <Title>{frontmatter.title}</Title>\n              <Date>{frontmatter.date}</Date>\n            </TitleArea>\n            <animated.div style={descriptionAnimation}>\n              <Markdown contents={body} />\n            </animated.div>\n          </Col>\n        </Row>\n        <Row\n          css={css`\n            margin-top: 5rem;\n          `}\n        >\n          {next && (\n            <Col>\n              <NavigationButton href={next.fields.path} variant=\"outline-secondary\">\n                <i\n                  css={css`\n                    margin-right: 1rem;\n                  `}\n                  className=\"fas fa-angle-left\"\n                ></i>\n                {next.frontmatter?.title ?? '다음 매거진'}\n              </NavigationButton>\n            </Col>\n          )}\n          {prev && (\n            <Col>\n              <NavigationButton href={prev.fields?.path} variant=\"outline-secondary\">\n                {prev.frontmatter?.title ?? '이전 매거진'}\n                <i\n                  css={css`\n                    margin-left: 1rem;\n                  `}\n                  className=\"fas fa-angle-right\"\n                ></i>\n              </NavigationButton>\n            </Col>\n          )}\n        </Row>\n      </Container>\n    </Page>\n  );\n};\n\nconst TitleArea = styled(animated.div)`\n  border-bottom: 1px solid ${Color.Grey100};\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n`;\nconst Title = styled.h1`\n  font-weight: 700;\n  color: ${Color.Grey900};\n  margin-bottom: 1rem;\n`;\nconst Date = styled.p`\n  font-size: 1rem;\n  margin: 0;\n  font-weight: 300;\n`;\nconst NavigationButton = styled(Button)`\n  width: 100%;\n`;\n\nexport default Magazine;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}