{"version":3,"sources":["webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/misc.ts","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/process/browser.js","webpack:///../src/string.ts","webpack:///../src/severity.ts","webpack:///../src/status.ts","webpack:///../src/syncpromise.ts","webpack:///../src/session.ts","webpack:///../src/scope.ts","webpack:///../src/logger.ts","webpack:///../src/hub.ts","webpack:///../src/index.ts","webpack:///../src/version.ts","webpack:///../src/polyfill.ts","webpack:///../src/error.ts","webpack:///../src/dsn.ts","webpack:///../src/integration.ts","webpack:///../src/baseclient.ts","webpack:///../../src/transports/noop.ts","webpack:///../src/basebackend.ts","webpack:///../src/supports.ts","webpack:///../src/tracekit.ts","webpack:///../src/parsers.ts","webpack:///../src/eventbuilder.ts","webpack:///../src/request.ts","webpack:///../src/api.ts","webpack:///../src/promisebuffer.ts","webpack:///../../src/transports/base.ts","webpack:///../../src/transports/fetch.ts","webpack:///../../src/transports/xhr.ts","webpack:///../src/backend.ts","webpack:///../src/helpers.ts","webpack:///../src/instrument.ts","webpack:///../../src/integrations/functiontostring.ts","webpack:///../../src/integrations/breadcrumbs.ts","webpack:///../src/client.ts","webpack:///../../src/integrations/inboundfilters.ts","webpack:///../../src/integrations/trycatch.ts","webpack:///../../src/integrations/globalhandlers.ts","webpack:///../../src/integrations/linkederrors.ts","webpack:///../../src/integrations/useragent.ts","webpack:///../src/sdk.ts","webpack:///../src/memo.ts","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///../src/node.ts","webpack:///../src/browser.ts","webpack:///../src/is.ts","webpack:///../src/object.ts","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///../src/stacktrace.ts","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///../src/time.ts","webpack:///./node_modules/core-js/internals/promise-resolve.js"],"names":["NATIVE_SYMBOL","module","exports","Symbol","sham","iterator","global","Promise","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","fallbackGlobalObject","getGlobalObject","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","c","r","Math","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","message","exception","values","type","value","event_id","consoleSandbox","callback","originalConsole","console","wrappedLevels","forEach","level","__sentry_original__","result","keys","addExceptionTypeValue","addExceptionMechanism","mechanism","key","_oO","getLocationHref","document","location","href","oO","parseRetryAfterHeader","now","header","headerDelay","parseInt","isNaN","headerDate","Date","parse","aFunction","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","undefined","TypeError","f","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","truncate","str","max","substr","snipLine","line","colno","newLine","ll","start","end","min","slice","safeJoin","input","delimiter","isArray","output","String","join","isMatchingPattern","pattern","test","indexOf","Severity","Status","fromString","Debug","Info","Warning","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","is","then","_value","_executeHandlers","_attachHandler","handler","cachedHandlers","done","onfulfilled","onrejected","SyncPromise","_","all","collection","counter","resolvedCollection","item","index","catch","val","finally","onfinally","isRejected","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","clone","scope","newScope","Scope","_level","_span","_session","_transactionName","_fingerprint","addScopeListener","addEventProcessor","setUser","user","update","_notifyScopeListeners","getUser","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setContext","context","setSpan","span","getSpan","getTransaction","transaction","spanRecorder","spans","setSession","session","getSession","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","clearBreadcrumbs","applyToEvent","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","processor","final","__SENTRY__","globalEventProcessors","addGlobalEventProcessor","PREFIX","_enabled","disable","enable","log","warn","error","logger","errors","sid","started","duration","status","SessionStatus","Ok","init","ip_address","ipAddress","did","id","email","username","release","environment","userAgent","close","Exited","toJSON","toISOString","attrs","user_agent","client","_version","_stack","getStackTop","bindClient","isOlderThan","setupIntegrations","pushScope","getScope","getStack","getClient","popScope","pop","withScope","captureException","eventId","_lastEventId","finalHint","syntheticException","originalException","_invokeClient","captureMessage","captureEvent","lastEventId","beforeBreadcrumb","finalBreadcrumb","configureScope","oldHub","makeMain","getIntegration","integration","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","captureSession","endSession","_sendSessionUpdate","startSession","currentSession","method","carrier","getMainCarrier","sentry","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","constructor","DSN_REGEX","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","publicKey","exec","split","projectMatch","components","component","ERROR_MESSAGE","installedIntegrations","options","integrations","defaultIntegrations","userIntegrations","map","defaultIntegration","userIntegration","integrationsNames","splice","getIntegrationsToSetup","setupOnce","setupIntegration","backendClass","_integrations","_processing","_backend","_options","dsn","_dsn","_process","_getBackend","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_sendSession","getDsn","getOptions","flush","_isClientProcessing","ready","getTransport","transportFlushed","enabled","_isEnabled","_updateSessionFromEvent","crashed","errored","exceptions","handled","headers","request","toLowerCase","Crashed","Number","sendSession","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","depth","normalized","b","data","dist","maxValueLength","sdkInfo","sdk","integrationsArray","_sendEvent","sendEvent","_processEvent","finalEvent","beforeSend","sampleRate","isTransaction","__sentry__","beforeSendResult","processedEvent","Skipped","_transport","_setupTransport","_exception","_hint","_message","supportsFetch","Headers","Request","Response","isNativeFetch","func","supportsReferrerPolicy","referrerPolicy","gecko","winjs","geckoEval","chromeEval","reactMinifiedRegexp","computeStackTrace","ex","stack","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","element","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","frames","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","filename","function","in_app","lineno","reverse","eventFromUnknownInput","attachStacktrace","eventFromString","domException","rejection","__serialized__","eventFromPlainObject","synthetic","getSdkMetadataForEnvelopeHeader","api","metadata","enhanceEventWithSdkInfo","packages","sessionToSentryRequest","body","JSON","stringify","sent_at","getEnvelopeEndpointWithUrlEncodedAuth","eventToSentryRequest","eventType","useEnvelope","transactionSampling","rate","debug_meta","req","getStoreEndpointWithUrlEncodedAuth","envelope","sample_rates","samplingMethod","_dsnObject","getBaseApiEndpoint","getStoreEndpoint","_getIngestEndpoint","_encodedAuth","_getEnvelopeEndpoint","getStoreEndpointPath","getRequestHeaders","clientName","clientVersion","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","target","auth","sentry_key","sentry_version","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","_rateLimits","_api","_metadata","_handleResponse","requestType","response","_handleRateLimit","_disabledUntil","category","_isRateLimited","rlHeader","raHeader","trim","parameters","delay","_sendRequest","sentryRequest","originalPayload","fetchParameters","assign","fetch","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","send","transportOptions","transport","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","property","defineProperties","getOwnPropertyDescriptor","configurable","injectReportDialog","script","createElement","async","src","onLoad","onload","head","appendChild","lastHref","handlers","instrumented","instrument","originalConsoleLevel","triggerHandlers","Function","instrumentConsole","triggerDOMHandler","bind","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","instrumentDOM","requestKeys","requestValues","xhrproto","originalOpen","xhr","__sentry_xhr__","toUpperCase","__sentry_own_request__","onreadystatechangeHandler","status_code","requestPos","endTimestamp","startTimestamp","original","readyStateArgs","originalSend","instrumentXHR","doc","sandbox","hidden","contentWindow","removeChild","err","supportsNativeFetch","originalFetch","handlerData","fetchData","getFetchMethod","getFetchUrl","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","to","instrumentHistory","_oldOnErrorHandler","onerror","msg","_oldOnUnhandledRejectionHandler","onunhandledrejection","addInstrumentationHandler","fetchArgs","debounceTimerID","lastCapturedEvent","globalListener","tagName","isContentEditable","shouldSkipDOMEvent","previous","current","shouldShortcircuitPreviousDebounce","originalFunctionToString","Breadcrumbs","dom","addSentryBreadcrumb","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","showReportDialog","platform","FunctionToString","DEFAULT_IGNORE_ERRORS","InboundFilters","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","denyUrls","allowUrls","whitelistUrls","blacklistUrls","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","_wrapEventTarget","originalCallback","eventName","wrappedEventHandler","originalEventHandler","xmlHttpRequestProps","wrapOptions","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","detail","_eventFromRejectionWithPrimitive","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","referrer","Referer","SENTRY_RELEASE","autoSessionTracking","SDK_VERSION","initAndBind","startSessionTracking","forceLoad","SDK_NAME","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","_hasWeakSet","WeakSet","_inner","memoize","has","unmemoize","delete","anObject","SPECIES","wellKnownSymbol","O","defaultConstructor","S","fails","getOwnPropertySymbols","isNodeEnv","dynamicRequire","mod","require","htmlTreeAsString","elem","currentElem","out","height","sepLength","nextStr","_htmlElementAsString","parentNode","el","className","classes","attr","allowedAttrs","getAttribute","isError","wat","isInstanceOf","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","base","_e","fill","source","replacementFactory","wrapped","urlEncode","object","getWalkSource","currentTarget","CustomEvent","jsonSize","encodeURI","utf8Length","normalizeToSize","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","serializeValue","acc","innerKey","extractExceptionKeysForMessage","maxLength","sort","includedKeys","dropUndefinedKeys","rv","$","IS_PURE","NativePromise","getBuiltIn","speciesConstructor","promiseResolve","redefine","real","forced","onFinally","isFunction","x","getFunctionName","shared","uid","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","dateTimestampSource","nowSeconds","platformPerformance","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timing","navigationStart","isObject","newPromiseCapability","promiseCapability"],"mappings":"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","file":"18-b42dfdff056098706835.js","sourcesContent":["var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    // eslint-disable-next-line no-param-reassign\n    colno = ll;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","/** JSDoc */\n// eslint-disable-next-line import/export\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number = Date.now();\n  public started: number = Date.now();\n  public duration: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n\n  constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // often, this span will be a transaction, but it's not guaranteed to be\n    const span = this.getSpan() as undefined | (Span & { spanRecorder: { spans: Span[] } });\n\n    // try it the new way first\n    if (span?.transaction) {\n      return span?.transaction;\n    }\n\n    // fallback to the old way (known bug: this only finds transactions with sampled = true)\n    if (span?.spanRecorder?.spans[0]) {\n      return span.spanRecorder.spans[0] as Transaction;\n    }\n\n    // neither way found a transaction\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, mergedBreadcrumb].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, mergedBreadcrumb];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relys on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction?.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  const global = getGlobalObject<any>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  SessionStatus,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    this.getStackTop()\n      ?.scope?.getSession()\n      ?.close();\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    this.getStackTop()?.scope?.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({ status: SessionStatus.Exited });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getMainCarrier().__SENTRY__?.extensions?.domain?.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","// TODO: Remove in the next major release and rely only on @sentry/core SDK_VERSION and SdkInfo metadata\nexport const SDK_NAME = 'sentry.javascript.browser';\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key (deprecated, renamed to publicKey). */\n  public user!: string;\n  /** Public authorization key. */\n  public publicKey!: string;\n  /** Private authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    const { host, path, pass, port, projectId, protocol, publicKey } = this;\n    return (\n      `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    if (projectId) {\n      const projectMatch = projectId.match(/^\\d+/);\n      if (projectMatch) {\n        projectId = projectMatch[0];\n      }\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    // TODO this is for backwards compatibility, and can be removed in a future version\n    if ('user' in components && !('publicKey' in components)) {\n      components.publicKey = components.user;\n    }\n    this.user = components.publicKey || '';\n\n    this.protocol = components.protocol;\n    this.publicKey = components.publicKey || '';\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'publicKey', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(`${ERROR_MESSAGE}: ${component} missing`);\n      }\n    });\n\n    if (!this.projectId.match(/^\\d+$/)) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid projectId ${this.projectId}`);\n    }\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid protocol ${this.protocol}`);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid port ${this.port}`);\n    }\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","/* eslint-disable max-lines */\nimport { Scope, Session } from '@sentry/hub';\nimport {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Options,\n  SessionStatus,\n  Severity,\n} from '@sentry/types';\nimport {\n  dateTimestampInSeconds,\n  Dsn,\n  isPrimitive,\n  isThenable,\n  logger,\n  normalize,\n  SentryError,\n  SyncPromise,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the environment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Number of call being processed */\n  protected _processing: number = 0;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._getBackend()\n        .eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(String(message), level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!session.release) {\n      logger.warn('Discarded session because of missing release');\n    } else {\n      this._sendSession(session);\n      // After sending, we set init false to inidcate it's not the first occurence\n      session.update({ init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(ready => {\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    let userAgent;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    const user = event.user;\n    if (!session.userAgent) {\n      const headers = event.request ? event.request.headers : {};\n      for (const key in headers) {\n        if (key.toLowerCase() === 'user-agent') {\n          userAgent = headers[key];\n          break;\n        }\n      }\n    }\n\n    session.update({\n      ...(crashed && { status: SessionStatus.Crashed }),\n      user,\n      userAgent,\n      errors: session.errors + Number(errored || crashed),\n    });\n    this.captureSession(session);\n  }\n\n  /** Deliver captured session to Sentry */\n  protected _sendSession(session: Session): void {\n    this._getBackend().sendSession(session);\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._processing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { normalizeDepth = 3 } = this.getOptions();\n    const prepared: Event = {\n      ...event,\n      event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint && hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n  protected _normalizeEvent(event: Event | null, depth: number): Event | null {\n    if (!event) {\n      return null;\n    }\n\n    const normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth),\n      }),\n    };\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      normalized.contexts.trace = event.contexts.trace;\n    }\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n  protected _applyClientOptions(event: Event): void {\n    const options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n  protected _applyIntegrationsMetadata(event: Event): void {\n    const sdkInfo = event.sdk;\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Tells the backend to send this event\n   * @param event The Sentry event to send\n   */\n  protected _sendEvent(event: Event): void {\n    this._getBackend().sendEvent(event);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        logger.error(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject(new SentryError('SDK not enabled, will not send event.'));\n    }\n\n    const isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, scope, hint)\n      .then(prepared => {\n        if (prepared === null) {\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        const isInternalException = hint && hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        const beforeSendResult = beforeSend(prepared, hint);\n        if (typeof beforeSendResult === 'undefined') {\n          throw new SentryError('`beforeSend` method has to return `null` or a valid event.');\n        } else if (isThenable(beforeSendResult)) {\n          return (beforeSendResult as PromiseLike<Event | null>).then(\n            event => event,\n            e => {\n              throw new SentryError(`beforeSend rejected with ${e}`);\n            },\n          );\n        }\n        return beforeSendResult;\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        const session = scope && scope.getSession && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this._sendEvent(processedEvent);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason as Error,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._processing += 1;\n    promise.then(\n      value => {\n        this._processing -= 1;\n        return value;\n      },\n      reason => {\n        this._processing -= 1;\n        return reason;\n      },\n    );\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","import { Event, EventHint, Options, Session, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instantiate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /** Submits the session to Sentry */\n  sendSession(session: Session): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instantiate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): void {\n    if (!this._transport.sendSession) {\n      logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n      return;\n    }\n\n    this._transport.sendSession(session).then(null, reason => {\n      logger.error(`Error while sending session: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex: any): StackTrace {\n  let stack = null;\n  let popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n        // prefix here seems like the quickest solution for now.\n        url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  rejection?: boolean,\n): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .reverse();\n}\n","import { Event, EventHint, Options, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options: Options, exception: unknown, hint?: EventHint): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(exception, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  addExceptionMechanism(event, {\n    handled: true,\n    type: 'generic',\n  });\n  event.level = Severity.Error;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  options: Options,\n  message: string,\n  level: Severity = Severity.Info,\n  hint?: EventHint,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(message, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    // eslint-disable-next-line no-param-reassign\n    exception = errorEvent.error;\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name, code, and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { Event, SdkInfo, SentryRequest, Session } from '@sentry/types';\n\nimport { API } from './api';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api: API): SdkInfo | undefined {\n  if (!api.metadata || !api.metadata.sdk) {\n    return;\n  }\n  const { name, version } = api.metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n\n  event.sdk = event.sdk || {\n    name: sdkInfo.name,\n    version: sdkInfo.version,\n  };\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates a SentryRequest from an event. */\nexport function sessionToSentryRequest(session: Session, api: API): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const envelopeHeaders = JSON.stringify({\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n  });\n  const itemHeaders = JSON.stringify({\n    type: 'session',\n  });\n\n  return {\n    body: `${envelopeHeaders}\\n${itemHeaders}\\n${JSON.stringify(session)}`,\n    type: 'session',\n    url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n  };\n}\n\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event: Event, api: API): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const eventType = event.type || 'event';\n  const useEnvelope = eventType === 'transaction';\n\n  const { transactionSampling, ...metadata } = event.debug_meta || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n  if (Object.keys(metadata).length === 0) {\n    delete event.debug_meta;\n  } else {\n    event.debug_meta = metadata;\n  }\n\n  const req: SentryRequest = {\n    body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n    type: eventType,\n    url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n  };\n\n  // https://develop.sentry.dev/sdk/envelopes/\n\n  // Since we don't need to manipulate envelopes nor store them, there is no\n  // exported concept of an Envelope with operations including serialization and\n  // deserialization. Instead, we only implement a minimal subset of the spec to\n  // serialize events inline here.\n  if (useEnvelope) {\n    const envelopeHeaders = JSON.stringify({\n      event_id: event.event_id,\n      sent_at: new Date().toISOString(),\n      ...(sdkInfo && { sdk: sdkInfo }),\n    });\n    const itemHeaders = JSON.stringify({\n      type: event.type,\n\n      // TODO: Right now, sampleRate may or may not be defined (it won't be in the cases of inheritance and\n      // explicitly-set sampling decisions). Are we good with that?\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n\n      // The content-type is assumed to be 'application/json' and not part of\n      // the current spec for transaction items, so we don't bloat the request\n      // body with it.\n      //\n      // content_type: 'application/json',\n      //\n      // The length is optional. It must be the number of bytes in req.Body\n      // encoded as UTF-8. Since the server can figure this out and would\n      // otherwise refuse events that report the length incorrectly, we decided\n      // not to send the length to avoid problems related to reporting the wrong\n      // size and to reduce request body size.\n      //\n      // length: new TextEncoder().encode(req.body).length,\n    });\n    // The trailing newline is optional. We intentionally don't send it to avoid\n    // sending unnecessary bytes.\n    //\n    // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n    const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}`;\n    req.body = envelope;\n  }\n\n  return req;\n}\n","import { DsnLike, SdkMetadata } from '@sentry/types';\nimport { Dsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n **/\nexport class API {\n  /** The DSN as passed to Sentry.init() */\n  public dsn: DsnLike;\n\n  /** Metadata about the SDK (name, version, etc) for inclusion in envelope headers */\n  public metadata: SdkMetadata;\n\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n\n  /** Create a new instance of API */\n  public constructor(dsn: DsnLike, metadata: SdkMetadata = {}) {\n    this.dsn = dsn;\n    this._dsnObject = new Dsn(dsn);\n    this.metadata = metadata;\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns the prefix to construct Sentry ingestion API endpoints. */\n  public getBaseApiEndpoint(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n  }\n\n  /** Returns the store endpoint URL. */\n  public getStoreEndpoint(): string {\n    return this._getIngestEndpoint('store');\n  }\n\n  /**\n   * Returns the store endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    return `${this.getStoreEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /**\n   * Returns the envelope endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getEnvelopeEndpointWithUrlEncodedAuth(): string {\n    return `${this._getEnvelopeEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /**\n   * Returns an object that can be used in request headers.\n   * This is needed for node and the old /store endpoint in sentry\n   */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.publicKey}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this.getBaseApiEndpoint()}embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'dsn') {\n        continue;\n      }\n\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n\n  /** Returns the envelope endpoint URL. */\n  private _getEnvelopeEndpoint(): string {\n    return this._getIngestEndpoint('envelope');\n  }\n\n  /** Returns the ingest API endpoint for target. */\n  private _getIngestEndpoint(target: 'store' | 'envelope'): string {\n    const base = this.getBaseApiEndpoint();\n    const dsn = this._dsnObject;\n    return `${base}${dsn.projectId}/${target}/`;\n  }\n\n  /** Returns a URL-encoded string with auth config suitable for a query string. */\n  private _encodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      // We send only the minimum set of required information. See\n      // https://github.com/getsentry/sentry-javascript/issues/2572.\n      sentry_key: dsn.publicKey,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    return urlEncode(auth);\n  }\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  public constructor(protected _limit?: number) {}\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { API } from '@sentry/core';\nimport {\n  Event,\n  Response as SentryResponse,\n  SentryRequestType,\n  Status,\n  Transport,\n  TransportOptions,\n} from '@sentry/types';\nimport { logger, parseRetryAfterHeader, PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @deprecated\n   */\n  public url: string;\n\n  /** Helper to get Sentry API endpoints. */\n  protected readonly _api: API;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<SentryResponse> = new PromiseBuffer(30);\n\n  /** Locks transport after receiving rate limits in a response */\n  protected readonly _rateLimits: Record<string, Date> = {};\n\n  public constructor(public options: TransportOptions) {\n    this._api = new API(options.dsn, options._metadata);\n    // eslint-disable-next-line deprecation/deprecation\n    this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<SentryResponse> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n\n  /**\n   * Handle Sentry repsonse for promise-based transports.\n   */\n  protected _handleResponse({\n    requestType,\n    response,\n    headers,\n    resolve,\n    reject,\n  }: {\n    requestType: SentryRequestType;\n    response: Response | XMLHttpRequest;\n    headers: Record<string, string | null>;\n    resolve: (value?: SentryResponse | PromiseLike<SentryResponse> | null | undefined) => void;\n    reject: (reason?: unknown) => void;\n  }): void {\n    const status = Status.fromHttpCode(response.status);\n    /**\n     * \"The name is case-insensitive.\"\n     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n     */\n    const limited = this._handleRateLimit(headers);\n    if (limited) logger.warn(`Too many requests, backing off until: ${this._disabledUntil(requestType)}`);\n\n    if (status === Status.Success) {\n      resolve({ status });\n      return;\n    }\n\n    reject(response);\n  }\n\n  /**\n   * Gets the time that given category is disabled until for rate limiting\n   */\n  protected _disabledUntil(category: string): Date {\n    return this._rateLimits[category] || this._rateLimits.all;\n  }\n\n  /**\n   * Checks if a category is rate limited\n   */\n  protected _isRateLimited(category: string): boolean {\n    return this._disabledUntil(category) > new Date(Date.now());\n  }\n\n  /**\n   * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n   */\n  protected _handleRateLimit(headers: Record<string, string | null>): boolean {\n    const now = Date.now();\n    const rlHeader = headers['x-sentry-rate-limits'];\n    const raHeader = headers['retry-after'];\n\n    if (rlHeader) {\n      // rate limit headers are of the form\n      //     <header>,<header>,..\n      // where each <header> is of the form\n      //     <retry_after>: <categories>: <scope>: <reason_code>\n      // where\n      //     <retry_after> is a delay in ms\n      //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n      //         <category>;<category>;...\n      //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n      //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n      for (const limit of rlHeader.trim().split(',')) {\n        const parameters = limit.split(':', 2);\n        const headerDelay = parseInt(parameters[0], 10);\n        const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n        for (const category of parameters[1].split(';')) {\n          this._rateLimits[category || 'all'] = new Date(now + delay);\n        }\n      }\n      return true;\n    } else if (raHeader) {\n      this._rateLimits.all = new Date(now + parseRetryAfterHeader(now, raHeader));\n      return true;\n    }\n    return false;\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const options: RequestInit = {\n      body: sentryRequest.body,\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n    if (this.options.headers !== undefined) {\n      options.headers = this.options.headers;\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(sentryRequest.url, options)\n          .then(response => {\n            const headers = {\n              'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n              'retry-after': response.headers.get('Retry-After'),\n            };\n            this._handleResponse({\n              requestType: sentryRequest.type,\n              response,\n              headers,\n              resolve,\n              reject,\n            });\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = (): void => {\n          if (request.readyState === 4) {\n            const headers = {\n              'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': request.getResponseHeader('Retry-After'),\n            };\n            this._handleResponse({ requestType: sentryRequest.type, response: request, headers, resolve, reject });\n          }\n        };\n\n        request.open('POST', sentryRequest.url);\n        for (const header in this.options.headers) {\n          if (this.options.headers.hasOwnProperty(header)) {\n            request.setRequestHeader(header, this.options.headers[header]);\n          }\n        }\n        request.send(sentryRequest.body);\n      }),\n    );\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.denyUrls}.\n   * By default, all errors will be sent.\n   */\n  allowUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To allow certain errors instead, use {@link Options.allowUrls}.\n   * By default, all errors will be sent.\n   */\n  denyUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.allowUrls} instead. */\n  whitelistUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.denyUrls} instead. */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A flag enabling Sessions Tracking feature.\n   * By default Sessions Tracking is disabled.\n   */\n  autoSessionTracking?: boolean;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options, exception, hint);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    return eventFromMessage(this._options, message, level, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n      _metadata: this._options._metadata,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n}\n","import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  (document.head || document.body).appendChild(script);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n  const requestKeys: XMLHttpRequest[] = [];\n  const requestValues: Array<any>[] = [];\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            const requestPos = requestKeys.indexOf(xhr);\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              const args = requestValues.splice(requestPos)[0];\n              if (xhr.__sentry_xhr__ && args[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args[0] as XHRSendInput;\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      requestKeys.push(this);\n      requestValues.push(args);\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(originalAddEventListener: AddEventListener): AddEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = el.__sentry_instrumentation_handlers__ || {};\n            const handlerForType = handlers[type];\n\n            if (handlerForType) {\n              handlerForType.refCount -= 1;\n              // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n              if (handlerForType.refCount <= 0) {\n                originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                handlerForType.handler = undefined;\n                delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n              }\n\n              // If there are no longer any custom handlers of any type on this element, cleanup everything.\n              if (Object.keys(handlers).length === 0) {\n                delete el.__sentry_instrumentation_handlers__;\n              }\n            }\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalRemoveEventListener.call(this, type, listener, options);\n      };\n    });\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function(e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  getGlobalObject,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n} from '@sentry/utils';\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom: boolean;\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbsOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Create a breadcrumb of `sentry` from the events themselves\n   */\n  public addSentryBreadcrumb(event: Event): void {\n    if (!this._options.sentry) {\n      return;\n    }\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._consoleBreadcrumb(...args);\n        },\n        type: 'console',\n      });\n    }\n    if (this._options.dom) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._domBreadcrumb(...args);\n        },\n        type: 'dom',\n      });\n    }\n    if (this._options.xhr) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._xhrBreadcrumb(...args);\n        },\n        type: 'xhr',\n      });\n    }\n    if (this._options.fetch) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._fetchBreadcrumb(...args);\n        },\n        type: 'fetch',\n      });\n    }\n    if (this._options.history) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._historyBreadcrumb(...args);\n        },\n        type: 'history',\n      });\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: Severity.fromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    getCurrentHub().addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  }\n\n  /**\n   * Creates breadcrumbs from DOM API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _domBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node)\n        : htmlTreeAsString((handlerData.event as unknown) as Node);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n    if (handlerData.endTimestamp) {\n      // We only capture complete, non-sentry requests\n      if (handlerData.xhr.__sentry_own_request__) {\n        return;\n      }\n\n      const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'xhr',\n          data: {\n            method,\n            url,\n            status_code,\n          },\n          type: 'http',\n        },\n        {\n          xhr: handlerData.xhr,\n          input: body,\n        },\n      );\n\n      return;\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n    // We only capture complete fetch requests\n    if (!handlerData.endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: handlerData.fetchData,\n          level: Severity.Error,\n          type: 'http',\n        },\n        {\n          data: handlerData.error,\n          input: handlerData.args,\n        },\n      );\n    } else {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          type: 'http',\n        },\n        {\n          input: handlerData.args,\n          response: handlerData.response,\n        },\n      );\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n    const global = getGlobalObject<Window>();\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(global.location.href);\n    let parsedFrom = parseUrl(from);\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    getCurrentHub().addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  }\n}\n","import { BaseClient, Scope } from '@sentry/core';\nimport { Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { injectReportDialog, ReportDialogOptions } from './helpers';\nimport { Breadcrumbs } from './integrations';\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n\n    injectReportDialog({\n      ...options,\n      dsn: options.dsn || this.getDsn(),\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _sendEvent(event: Event): void {\n    const integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    super._sendEvent(event);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n    }\n\n    if (this._options.eventTarget) {\n      const eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(this._wrapEventTarget.bind(this));\n    }\n  }\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, callback: () => void): () => void {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return original.call(\n        this,\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const global = getGlobalObject() as { [key: string]: any };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = global[target] && global[target].prototype;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = (fn as unknown) as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler?.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _wrapXHR(originalSend: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: XMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in xhr && typeof xhr[prop] === 'function') {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fill(xhr, prop, function(original: WrappedFunction): () => any {\n            const wrapOptions = {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: getFunctionName(original),\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            };\n\n            // If Instrument integration has been called before TryCatch, get the name of original function\n            if (original.__sentry_original__) {\n              wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n            }\n\n            // Otherwise wrap directly\n            return wrap(original, wrapOptions);\n          });\n        }\n      });\n\n      return originalSend.apply(this, args);\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Primitive, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n        const error = data.error;\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n          : this._enhanceEventWithInitialFrame(\n              eventFromUnknownInput(error, undefined, {\n                attachStacktrace: client && client.getOptions().attachStacktrace,\n                rejection: false,\n              }),\n              data.url,\n              data.line,\n              data.column,\n            );\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n      },\n      type: 'error',\n    });\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (e: any) => {\n        let error = e;\n\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromRejectionWithPrimitive(error)\n          : eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: true,\n            });\n\n        event.level = Severity.Error;\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n\n        return;\n      },\n      type: 'unhandledrejection',\n    });\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  private _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n            value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request?.url || global.location?.href;\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...event.request?.headers,\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations, SDK_VERSION } from '@sentry/core';\nimport { addInstrumentationHandler, getGlobalObject, logger, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient } from './client';\nimport { ReportDialogOptions, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  options._metadata = options._metadata || {};\n  options._metadata.sdk = {\n    name: 'sentry.javascript.browser',\n    packages: [\n      {\n        name: 'npm:@sentry/browser',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n\n  initAndBind(BrowserClient, options);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  const window = getGlobalObject<Window>();\n  const document = window.document;\n\n  if (typeof document === 'undefined') {\n    logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  hub.startSession();\n  hub.captureSession();\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler({\n    callback: () => {\n      hub.startSession();\n      hub.captureSession();\n    },\n    type: 'history',\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n","import { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  // eslint-disable-next-line prefer-const\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacementFactory A function that should be used to wrap a given method, returning the wrapped method which\n * will be substituted in for `source[name]`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance) {\n    return undefined;\n  }\n  if (performance.timeOrigin) {\n    return performance.timeOrigin;\n  }\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  return (performance.timing && performance.timing.navigationStart) || Date.now();\n})();\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n"],"sourceRoot":""}