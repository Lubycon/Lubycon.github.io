{"version":3,"sources":["webpack:///./src/components/Animated/AnimatedAngle.tsx","webpack:///./src/components/Main/MainJumbotron.tsx","webpack:///./src/components/Main/MainContentRow.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/hooks/useMainImages.ts"],"names":["directionRotate","left","right","up","down","useStyles","makeStyles","theme","createStyles","icon","display","width","props","size","height","textIndent","borderTop","palette","text","primary","borderLeft","transition","color","textDecoration","transform","direction","cursor","borderColor","borderWidth","marginLeft","marginTop","content","AnimatedAngleIcon","rest","styles","className","root","position","wrapper","top","breakpoints","title","fontStyle","fontSize","textAlign","whiteSpace","titlePoint","error","main","description","fontWeight","bottomArrow","bottom","MainJumbotron","containerRef","useRef","useState","scrollTarget","setScrollTarget","titleAnimation","useSpring","from","opacity","to","descriptionAnimation","bottomArrowAnimation","delay","scrollToBottom","useCallback","window","scroll","behavior","updateScrollTarget","current","clientHeight","useLayoutEffect","useEffect","addEventListener","removeEventListener","ref","h1","style","h2","div","AnimatedAngle","onClick","section","padding","marginBottom","lineHeight","button","background","image","paddingBottom","backgroundSize","backgroundImage","photo","link","MainContentRow","buttonTitle","menu","Grid","component","container","xs","item","spacing","md","Typography","dangerouslySetInnerHTML","__html","variant","RouteLink","Button","Index","images","mainContents","MemberMenu","memberImage","childImageSharp","fluid","src","BlogMenu","blogImage","GithubMenu","githubImage","Page","pageName","Container","map","index","key"],"mappings":"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","file":"component---src-pages-index-tsx-715f082b10e578d19d3b.js","sourcesContent":["import React, { HTMLProps } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n\ntype Direction = 'left' | 'right' | 'down' | 'up';\nconst directionRotate: { [key in Direction]: string } = {\n  left: '-45deg',\n  right: '135deg',\n  up: '45deg',\n  down: '-135deg',\n};\n\nconst useStyles = makeStyles<Theme, { size: number; direction: Direction }>(theme =>\n  createStyles({\n    icon: {\n      display: 'inline-block',\n      width: props => `${props.size}px`,\n      height: props => `${props.size}px`,\n      textIndent: '-9999px',\n      borderTop: `2px solid ${theme.palette.text.primary}`,\n      borderLeft: `2px solid ${theme.palette.text.primary}`,\n      transition: 'all 0.3s ease-in-out',\n      color: 'transparent',\n      textDecoration: 'none',\n      transform: props => `rotate(${directionRotate[props.direction]})`,\n      cursor: 'pointer',\n      '&:hover': {\n        borderColor: theme.palette.text.primary,\n        borderWidth: 5,\n      },\n      '&::before': {\n        display: 'block',\n        height: '200%',\n        width: '200%',\n        marginLeft: '50%',\n        marginTop: '-50%',\n        content: '\"\"',\n        transform: 'rotate(45deg)',\n      },\n    },\n  })\n);\n\ninterface Props extends HTMLProps<HTMLAnchorElement> {\n  size?: number;\n  direction?: Direction;\n}\nconst AnimatedAngleIcon = ({ size = 60, direction = 'down', ...rest }: Props) => {\n  const styles = useStyles({ size, direction });\n  return <a className={styles.icon} {...rest} />;\n};\n\nexport default AnimatedAngleIcon;\n","import React, { useState, useCallback, useEffect, useRef, useLayoutEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport AnimatedAngle from 'src/components/Animated/AnimatedAngle';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      height: '100vh',\n    },\n    wrapper: {\n      position: 'absolute',\n      top: '40%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      [theme.breakpoints.down('md')]: {\n        top: '30%',\n      },\n    },\n    title: {\n      fontStyle: 'italic',\n      fontSize: '3.5rem',\n      textAlign: 'center',\n      whiteSpace: 'nowrap',\n      [theme.breakpoints.down('md')]: {\n        fontSize: '2rem',\n      },\n    },\n    titlePoint: {\n      color: theme.palette.error.main,\n    },\n    description: {\n      textAlign: 'center',\n      fontWeight: 200,\n      fontSize: '1.4rem',\n      fontStyle: 'italic',\n    },\n    bottomArrow: {\n      position: 'absolute',\n      bottom: '20%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n    },\n  })\n);\n\nconst MainJumbotron = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [scrollTarget, setScrollTarget] = useState(0);\n  const styles = useStyles();\n\n  const titleAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateX(-30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n  });\n  const descriptionAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateX(30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n  });\n  const bottomArrowAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateY(-30px)' },\n    to: { opacity: 1, transform: 'translateY(0)' },\n    delay: 300,\n  });\n\n  const scrollToBottom = useCallback(() => {\n    window.scroll({ top: scrollTarget, behavior: 'smooth' });\n  }, [scrollTarget]);\n\n  const updateScrollTarget = useCallback(() => {\n    if (containerRef.current) {\n      const scrollTarget = containerRef.current.clientHeight;\n      setScrollTarget(scrollTarget);\n    }\n  }, [setScrollTarget]);\n\n  useLayoutEffect(() => {\n    updateScrollTarget();\n  }, [updateScrollTarget]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateScrollTarget);\n    return () => {\n      window.removeEventListener('resize', updateScrollTarget);\n    };\n  }, [updateScrollTarget]);\n\n  return (\n    <div ref={containerRef} className={styles.root}>\n      <div className={styles.wrapper}>\n        <animated.h1 style={titleAnimation} className={styles.title}>\n          Growth\n          <span className={styles.titlePoint}>.</span> And Share\n        </animated.h1>\n        <animated.h2 style={descriptionAnimation} className={styles.description}>\n          This is <strong>Lubycon</strong>\n        </animated.h2>\n      </div>\n      <div className={styles.bottomArrow}>\n        <animated.div style={bottomArrowAnimation}>\n          <AnimatedAngle onClick={scrollToBottom} />\n        </animated.div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainJumbotron;\n","import React from 'react';\nimport { Grid, Button, makeStyles, Typography, createStyles, Theme } from '@material-ui/core';\nimport { Menu } from 'src/models';\nimport RouteLink from 'components/Utils/RouteLink';\n\ninterface Props {\n  title: string;\n  direction: 'left' | 'right';\n  description: string;\n  buttonTitle: string;\n  menu: Menu;\n  photo: string;\n}\n\nconst useStyles = makeStyles<Theme, { photo: string }>(theme =>\n  createStyles({\n    section: {\n      padding: '3rem 0',\n    },\n    h2: {\n      marginBottom: '2rem',\n    },\n    description: {\n      lineHeight: 1.8,\n      marginBottom: '1rem',\n    },\n    button: {\n      background: theme.palette.primary.main,\n      color: '#ffffff',\n      textDecoration: 'none',\n      padding: '0.5rem 1.2rem',\n    },\n    image: {\n      paddingBottom: '50%',\n      backgroundSize: 'cover',\n      backgroundImage: props => `url(${props.photo})`,\n      [theme.breakpoints.down('md')]: {\n        marginBottom: '1rem',\n      },\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  })\n);\n\nconst MainContentRow = ({ title, direction, description, buttonTitle, menu, photo }: Props) => {\n  const style = useStyles({ photo });\n  return (\n    <Grid component=\"section\" className={style.section} container>\n      <Grid component=\"h2\" xs={12} item className={style.h2}>\n        {title}\n      </Grid>\n      <Grid container direction={direction === 'left' ? 'row-reverse' : 'row'} spacing={3}>\n        <Grid xs={12} md={6} item>\n          <Typography dangerouslySetInnerHTML={{ __html: description }} className={style.description} variant=\"body2\" />\n          <RouteLink to={menu.link} className={style.link}>\n            <Button className={style.button} size=\"large\">\n              {buttonTitle}\n            </Button>\n          </RouteLink>\n        </Grid>\n        <Grid xs={12} md={6} item>\n          <div className={style.image}></div>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MainContentRow;\n","import React from 'react';\nimport Page from 'components/Layout/Page';\nimport { MemberMenu, BlogMenu, GithubMenu } from 'constants/menu';\nimport { Container } from '@material-ui/core';\nimport { useMainImages } from 'hooks/useMainImages';\nimport { MainContent } from 'src/models';\nimport MainJumbotron from 'components/Main/MainJumbotron';\nimport MainContentRow from 'components/Main/MainContentRow';\n\nconst Index = () => {\n  const images = useMainImages();\n  const mainContents: MainContent[] = [\n    {\n      title: 'Lubycon',\n      description: `\n        <strong>Lubycon</strong>은 2014년에 결성된 개발자와 디자이너들의 토이 프로젝트 팀입니다. 멤버들은 일상 속의 아이디어나 새롭게 해보고 싶은 기술을 들고와서 다른 멤버들과 공유하고, 매일 새로운 것들에 도전하면서 프로젝트를 진행하고 있습니다.\n      `,\n      menu: MemberMenu,\n      buttonTitle: '멤버들 보러가기',\n      photo: images.memberImage.childImageSharp.fluid.src,\n    },\n    {\n      title: '블로그 포스팅',\n      description: `\n        멤버들은 각자 블로그에도 포스팅을 하고 있습니다. <strong>Lubycon</strong>의 멤버들은 웹, 영상처리, 머신러닝 등 다양한 분야에서 활동하고 있기 때문에 다양한 내용과 견해에 대한 포스팅을 구경할 수 있습니다. 아래 버튼을 클릭하시면 멤버들의 블로그 포스팅을 한 눈에 보실 수 있습니다.\n      `,\n      menu: BlogMenu,\n      buttonTitle: '멤버들 블로그 보러가기',\n      photo: images.blogImage.childImageSharp.fluid.src,\n    },\n    {\n      title: 'Lubycon의 프로젝트',\n      description: `\n        Lubycon의 프로젝트는 주로 Github를 사용하여 진행되며, 외부로 알려지고 싶지않은 프로젝트의 경우에는 Bitbucket을 사용합니다. 프로젝트는 하나의 서비스를 만드는 대형 프로젝트일 수도 있고 간단한 기능만 가진 어플리케이션을 개발하는 작은 프로젝트일 수도 있습니다. \n      `,\n      menu: GithubMenu,\n      buttonTitle: '루비콘 깃허브 구경하기',\n      photo: images.githubImage.childImageSharp.fluid.src,\n    },\n  ];\n\n  return (\n    <Page pageName=\"Home\">\n      <MainJumbotron />\n      <Container>\n        {mainContents.map(({ title, description, menu, buttonTitle, photo }, index) => {\n          return (\n            <MainContentRow\n              key={index}\n              title={title}\n              description={description}\n              buttonTitle={buttonTitle}\n              menu={menu}\n              photo={photo}\n              direction={index % 2 ? 'right' : 'left'}\n            />\n          );\n        })}\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import { useStaticQuery, graphql } from 'gatsby';\n\ninterface ImageQueryResult {\n  childImageSharp: {\n    fluid: {\n      src: string;\n    };\n  };\n}\ninterface MainImageQueryResult {\n  memberImage: ImageQueryResult;\n  magazineImage: ImageQueryResult;\n  blogImage: ImageQueryResult;\n  githubImage: ImageQueryResult;\n}\nexport function useMainImages() {\n  const queryResult = useStaticQuery<MainImageQueryResult>(graphql`\n    query {\n      memberImage: file(relativePath: { eq: \"main/members.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      magazineImage: file(relativePath: { eq: \"main/magazines.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      blogImage: file(relativePath: { eq: \"main/blogs.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      githubImage: file(relativePath: { eq: \"main/github.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 800, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return queryResult;\n}\n"],"sourceRoot":""}