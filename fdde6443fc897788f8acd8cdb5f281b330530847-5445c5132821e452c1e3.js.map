{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./src/components/Utils/ImpressionArea.tsx","webpack:///./src/hooks/useCombinedRefs.ts","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./src/components/Animated/AnimatedListItem.tsx","webpack:///./node_modules/lodash/toNumber.js"],"names":["baseGetTag","isObjectLike","module","exports","value","Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","isOwn","call","tag","unmasked","e","result","type","freeGlobal","freeSelf","self","root","Function","getRawTag","objectToString","ImpressionArea","forwardRef","forwardedRef","rootMargin","areaThreshold","timeThreshold","className","children","ref","refs","useCallback","current","useCombinedRefs","onImpressionStart","onImpressionEnd","impressionRatio","useState","isImpressed","setIsImpressed","handleImpressionStart","useDebouncedCallback","handleImpressionEnd","handleImpression","entries","entry","currentRatio","intersectionRatio","isIntersecting","cancel","observer","useMemo","IntersectionObserver","threshold","element","disconnect","observe","useImpressionRef","func","delay","deps","debounce","Date","now","reWhitespace","string","index","length","test","charAt","global","trimmedEndIndex","reTrimStart","slice","replace","isObject","toNumber","nativeMax","Math","max","nativeMin","min","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","flush","AnimatedListItem","isVisible","setVisible","animation","useSpring","opacity","visibility","transform","random","div","style","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"mappings":"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","file":"fdde6443fc897788f8acd8cdb5f281b330530847-5445c5132821e452c1e3.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","import debounce from 'lodash/debounce';\nimport React, { useCallback, useMemo, useState, forwardRef, Ref } from 'react';\nimport { useCombinedRefs } from 'hooks/useCombinedRefs';\n\nexport interface Props {\n  onImpressionStart?: () => void;\n  onImpressionEnd?: () => void;\n  rootMargin?: string;\n  /**\n   * 몇 퍼센트 이상 화면에 표시되면 \"보인다\"고 생각할지 결정합니다.\n   * 예를 들어, 0.5가 주어지면 0.5 이상이 보여졌을 때 `onImpressionStart`, 이하가 보여졌을 때 `onImpressionEnd`가 호출됩니다.\n   * @default 0\n   */\n  areaThreshold?: number;\n  /**\n   * 몇 밀리세컨드 이상 화면에 표시되거나 사라져야 실제로 값을 업데이트할지 결정합니다.\n   * 예를 들어, 값이 2000이면 2초 사이에 요소의 표시 상태가 바뀌어도 첫 상태와 끝 상태가 같다면 이벤트가 호출되지 않습니다.\n   * @default 0\n   */\n  timeThreshold?: number;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nconst ImpressionArea = forwardRef(\n  (\n    { rootMargin, areaThreshold, timeThreshold, className, children, onImpressionStart, onImpressionEnd }: Props,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const impressionRef = useImpressionRef<HTMLDivElement>({\n      onImpressionStart,\n      onImpressionEnd,\n      areaThreshold,\n      timeThreshold,\n      rootMargin,\n    });\n\n    const ref = useCombinedRefs(forwardedRef, impressionRef);\n\n    return (\n      <div className={className} ref={ref}>\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default ImpressionArea;\n\nexport function useImpressionRef<Element extends HTMLElement>({\n  onImpressionStart,\n  onImpressionEnd,\n  timeThreshold = 0,\n  rootMargin = '-8px',\n  areaThreshold: impressionRatio = 0,\n}: Pick<Props, 'rootMargin' | 'onImpressionStart' | 'onImpressionEnd' | 'timeThreshold' | 'areaThreshold'>) {\n  const [isImpressed, setIsImpressed] = useState(false);\n\n  const handleImpressionStart = useDebouncedCallback(\n    () => {\n      if (!isImpressed) {\n        if (onImpressionStart !== undefined) {\n          onImpressionStart();\n        }\n        setIsImpressed(true);\n      }\n    },\n    timeThreshold,\n    [isImpressed, setIsImpressed, onImpressionStart]\n  );\n\n  const handleImpressionEnd = useDebouncedCallback(\n    () => {\n      if (isImpressed) {\n        if (onImpressionEnd !== undefined) {\n          onImpressionEnd();\n        }\n        setIsImpressed(false);\n      }\n    },\n    timeThreshold,\n    [isImpressed, setIsImpressed, onImpressionEnd]\n  );\n\n  const handleImpression = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      const entry = entries[0];\n      const currentRatio = entry.intersectionRatio;\n\n      const didImpressionEnd = impressionRatio === 0 ? !entry.isIntersecting : currentRatio < impressionRatio;\n\n      if (didImpressionEnd) {\n        handleImpressionStart.cancel();\n        handleImpressionEnd();\n      } else {\n        handleImpressionEnd.cancel();\n        handleImpressionStart();\n      }\n    },\n    [handleImpressionEnd, handleImpressionStart, impressionRatio]\n  );\n\n  const observer = useMemo(() => {\n    if (typeof IntersectionObserver === 'undefined') {\n      return undefined;\n    }\n\n    return new IntersectionObserver(handleImpression, {\n      rootMargin,\n      threshold: impressionRatio,\n    });\n  }, [handleImpression, impressionRatio, rootMargin]);\n\n  const ref = useCallback(\n    (element: Element | null) => {\n      if (observer === undefined) {\n        return;\n      }\n\n      observer.disconnect();\n      // unmount시 ref callback에는 null이 넘어옴\n      if (element !== null) {\n        observer.observe(element);\n      }\n    },\n    [observer]\n  );\n\n  return ref;\n}\n\nfunction useDebouncedCallback<Func extends (...args: any[]) => any>(func: Func, delay: number, deps: any[] = []) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => debounce(func, delay), [delay, ...deps]);\n}\n","import { Ref, useCallback, MutableRefObject } from 'react';\n\ntype CallbackRef<T> = (ref: T | null) => void;\n\n/**\n * 여러 개의 ref를 하나로 합치고 싶을 때 사용할 수 있는 hook입니다.\n * @example\n * const SomeComponent = forwardRef((props, parentRef) => {\n *   const myRef = useRef();\n *   const ref = useCombinedRefs(myRef, parentRef);\n *\n *   // 하단 div가 업데이트되면 myRef와 parentRef 모두가 업데이트됨\n *   return <div ref={ref} />;\n * })\n * @param refs 병합할 ref들\n */\nexport function useCombinedRefs<T>(...refs: Array<Ref<T> | CallbackRef<T>>): Ref<T> {\n  return useCallback(\n    (value: T) => {\n      for (const ref of refs) {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          (ref as MutableRefObject<T>).current = value;\n        }\n      }\n    },\n    [refs]\n  );\n}\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import React, { ReactNode, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport ImpressionArea from 'components/Utils/ImpressionArea';\n\ninterface Props {\n  children: ReactNode;\n}\nconst AnimatedListItem = ({ children }: Props) => {\n  const [isVisible, setVisible] = useState(false);\n  const animation = useSpring({\n    opacity: isVisible ? 1 : 0,\n    visibility: isVisible ? 'visible' : 'hidden',\n    transform: isVisible ? 'translateY(0)' : 'translateY(10%)',\n    delay: Math.random() * 600,\n  });\n\n  return (\n    <ImpressionArea onImpressionStart={() => setVisible(true)}>\n      <animated.div style={animation}>{children}</animated.div>\n    </ImpressionArea>\n  );\n};\n\nexport default AnimatedListItem;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"sourceRoot":""}