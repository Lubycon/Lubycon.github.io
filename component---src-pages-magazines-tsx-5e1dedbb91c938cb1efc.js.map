{"version":3,"sources":["webpack:///./src/components/Cards/MagazineCard.tsx","webpack:///./src/pages/magazines.tsx","webpack:///./node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js"],"names":["MagazineCard","magazine","path","fields","frontmatter","title","date","thumbnail","theme","useTheme","style","makeStyles","root","display","flexDirection","justifyContent","alignItems","breakpoints","up","image","maxWidth","fontWeight","link","textDecoration","AnimatedListItem","to","className","Card","CardActionArea","CardMedia","component","src","childImageSharp","fixed","CardContent","Typography","variant","pageQuery","Magazines","magazineList","data","allMdx","edges","filter","edge","Boolean","node","Page","pageName","description","showTitle","Container","Grid","container","spacing","map","key","id","xs","sm","md","lg","item","props","ref","children","classes","focusVisibleClassName","other","focusVisible","focusHighlight","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","name"],"mappings":"wRA2DeA,EAjDM,SAAC,GAAwB,UAAtBC,EAAsB,EAAtBA,SAEVC,EAERD,EAFFE,OAAUD,KAFgC,EAIxCD,EADFG,YAAeC,EAH2B,EAG3BA,MAAOC,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,UAGxBC,EAAQC,cACRC,EAAQC,YAAW,CACvBC,MAAI,GACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,QAChBC,WAAY,SAJV,EAKDR,EAAMS,YAAYC,GAAG,OAAQ,CAC5BJ,cAAe,OANf,GASJK,OAAK,OACFX,EAAMS,YAAYC,GAAG,OAAQ,CAC5BE,SAAU,KAFT,GAKLf,MAAO,CACLgB,WAAY,QAEdC,KAAM,CACJC,eAAgB,SAnBNZ,GAuBd,OACE,YAACa,EAAA,EAAD,KACE,YAAC,OAAD,CAAMC,GAAIvB,EAAMwB,UAAWhB,EAAMY,MAC/B,YAACK,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAgBF,UAAWhB,EAAME,MAC/B,YAACiB,EAAA,EAAD,CAAWH,UAAWhB,EAAMS,MAAOW,UAAU,MAAMC,IAAKxB,aAAF,YAAEA,EAAWyB,uBAAb,aAAE,EAA4BC,MAAMF,MAC1F,YAACG,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,YAAYV,UAAWhB,EAAML,OAC7DA,GAEH,YAAC8B,EAAA,EAAD,CAAYC,QAAQ,WAAW9B,SClD7C,0CAQO,IAAM+B,EAAY,aAqDVC,UApBG,SAAC,GAIN,IACLC,EADK,EAHXC,KACEC,OAAUC,MAGeC,QAAO,SAAAC,GAAI,OAAIC,QAAQD,EAAKE,KAAK1C,YAAYE,SACxE,OACE,YAACyC,EAAA,EAAD,CAAMC,SAAS,YAAYC,YAAY,uBAAuBC,WAAW,GACvE,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBf,EAAagB,KAAI,gBAAGT,EAAH,EAAGA,KAAH,OAChB,YAACM,EAAA,EAAD,CAAMI,IAAKV,EAAKW,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,MAAI,GACtD,YAAC,EAAD,CAAc7D,SAAU6C,a,kCCrDtC,wFA2CIlB,EAAiB,cAAiB,SAAwBmC,EAAOC,GACnE,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBxC,EAAYqC,EAAMrC,UAClByC,EAAwBJ,EAAMI,sBAC9BC,EAAQ,YAAyBL,EAAO,CAAC,WAAY,UAAW,YAAa,0BAEjF,OAEE,gBAAoB,IAAY,YAAS,CACvCrC,UAAW,YAAKwC,EAAQtD,KAAMc,GAC9ByC,sBAAuB,YAAKA,EAAuBD,EAAQG,cAC3DL,IAAKA,GACJI,GAAQH,EAEX,gBAAoB,OAAQ,CAC1BvC,UAAWwC,EAAQI,qBA0BV,iBA9EK,SAAgB9D,GAClC,MAAO,CAELI,KAAM,CACJC,QAAS,QACT0D,UAAW,UACXC,MAAO,OACP,0BAA2B,CACzBC,QAASjE,EAAMkE,QAAQC,OAAOC,cAEhC,iCAAkC,CAChCH,QAAS,MAKbJ,aAAc,GAGdC,eAAgB,CACdO,SAAU,SACVC,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,aAAc,UACdX,QAAS,EACTY,gBAAiB,eACjBC,WAAY9E,EAAM+E,YAAYC,OAAO,UAAW,CAC9CC,SAAUjF,EAAM+E,YAAYE,SAAgB,YA+ClB,CAChCC,KAAM,qBADO,CAEZ9D","file":"component---src-pages-magazines-tsx-5e1dedbb91c938cb1efc.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Card, CardContent, Typography, CardMedia, makeStyles, useTheme, CardActionArea } from '@material-ui/core';\nimport { Magazine } from 'src/models';\nimport { Link } from 'gatsby';\nimport AnimatedListItem from 'src/components/Animated/AnimatedListItem';\n\ninterface Props {\n  magazine: Magazine;\n}\nconst MagazineCard = ({ magazine }: Props) => {\n  const {\n    fields: { path },\n    frontmatter: { title, date, thumbnail },\n  } = magazine;\n\n  const theme = useTheme();\n  const style = makeStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'start',\n      alignItems: 'start',\n      [theme.breakpoints.up('md')]: {\n        flexDirection: 'row',\n      },\n    },\n    image: {\n      [theme.breakpoints.up('md')]: {\n        maxWidth: 200,\n      },\n    },\n    title: {\n      fontWeight: 'bold',\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  })();\n\n  return (\n    <AnimatedListItem>\n      <Link to={path} className={style.link}>\n        <Card>\n          <CardActionArea className={style.root}>\n            <CardMedia className={style.image} component=\"img\" src={thumbnail?.childImageSharp?.fixed.src} />\n            <CardContent>\n              <Typography component=\"h3\" variant=\"subtitle1\" className={style.title}>\n                {title}\n              </Typography>\n              <Typography variant=\"caption\">{date}</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Link>\n    </AnimatedListItem>\n  );\n};\n\nexport default MagazineCard;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport Page from 'components/Layout/Page';\nimport { graphql } from 'gatsby';\nimport { Container, Grid } from '@material-ui/core';\nimport { Magazine } from 'src/models';\nimport MagazineCard from 'components/Cards/MagazineCard';\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          fields {\n            path\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                fixed(width: 640, height: 640, quality: 100, cropFocus: CENTER) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface Props {\n  data: {\n    allMdx: {\n      edges: Array<{ node: Magazine }>;\n    };\n  };\n}\nconst Magazines = ({\n  data: {\n    allMdx: { edges },\n  },\n}: Props) => {\n  const magazineList = edges.filter(edge => Boolean(edge.node.frontmatter.date));\n  return (\n    <Page pageName=\"Magazines\" description=\"루비콘의 에피소드가 담긴 포스팅입니다\" showTitle={true}>\n      <Container>\n        <Grid container spacing={3}>\n          {magazineList.map(({ node }) => (\n            <Grid key={node.id} xs={12} sm={12} md={12} lg={12} item>\n              <MagazineCard magazine={node} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\nexport default Magazines;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration[\"short\"]\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(ButtonBase, _extends({\n      className: clsx(classes.root, className),\n      focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n      ref: ref\n    }, other), children,\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: classes.focusHighlight\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);"],"sourceRoot":""}