{"version":3,"sources":["webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/gatsby-plugin-firebase/src/firebase.js","webpack:///./node_modules/gatsby-plugin-firebase/index.js","webpack:///./src/hooks/useAuth.ts","webpack:///./src/pages/logout.tsx"],"names":["ex","firebase","registerVersion","module","exports","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useAuth","useState","auth","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","loginByEmail","useCallback","email","password","signInWithEmailAndPassword","logout","signOut","isAuthorized","Boolean","Logout","isLoading","setLoadingFlag","backToMainAfterlogout","a","navigate"],"mappings":"2FAMA,IAJyBA,EAIrBC,GAJqBD,EAIM,EAAQ,UAHV,iBAAPA,GAAmB,YAAaA,EAAKA,EAAY,QAAIA,EAwB3EC,EAASC,gBAnBE,WACG,SAkB0B,OACxCC,EAAOC,QAAUH,G,6FC1BZA,IAASI,KAAKC,QACjBL,IAASM,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,0BACZE,YAAaF,iCACbG,UAAWH,UACXI,cAAeJ,sBACfK,kBAAmBL,cACnBM,MAAON,2CACPO,cAAeP,iBAIJR,ICbAA,EDaAA,EAAf,E,YENO,SAASgB,IAAsB,QACEC,mBAAQ,UAACjB,EAASkB,YAAV,aAAC,OAAAlB,GAAkBmB,aAA1DA,EAD6B,KAChBC,EADgB,KAGpCC,qBAAU,WAAM,MACd,UAAArB,EAASkB,YAAT,cAAAlB,GAAkBsB,oBAAmB,SAAAC,GACnCH,EAAeG,QAEhB,IAEH,IAAMC,EAAeC,uBAAY,SAACC,EAAeC,GAAqB,MACpE,iBAAO3B,EAASkB,YAAhB,aAAO,OAAAlB,GAAkB4B,2BAA2BF,EAAOC,KAC1D,IAEGE,EAASJ,uBAAY,WAAM,MAC/B,iBAAOzB,EAASkB,YAAhB,aAAO,OAAAlB,GAAkB8B,YACxB,IAEH,MAAO,CACLC,aAAcC,QAAQb,GACtBI,KAAMJ,EACNK,eACAK,Y,8cCFWI,UAtBA,WAAM,MACcjB,cAAzBe,EADW,EACXA,aAAcF,EADH,EACGA,OADH,EAEiBZ,oBAAS,GAAtCiB,EAFY,KAEDC,EAFC,KAIbC,EAAwBX,sBAAW,YAAC,sBAAAY,EAAA,6DACxCF,GAAe,GADyB,SAElCN,IAFkC,OAGxCS,mBAAS,KACTH,GAAe,GAJyB,2CAKvC,CAACN,IAUJ,OARAR,qBAAU,WACJU,EACFK,IACUF,GACVI,mBAAS,YAEV,CAACF,EAAuBL,EAAcG,IAElC","file":"component---src-pages-logout-tsx-f649030ecdbf12216f20.js","sourcesContent":["'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar name = \"firebase\";\nvar version = \"7.14.5\";\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfirebase.registerVersion(name, version, 'app');\nmodule.exports = firebase;","import firebase from \"firebase/app\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\n  });\n}\n\nexport default firebase;\n","import firebase from \"./src/firebase\";\n\nexport default firebase;\n","import firebase from 'gatsby-plugin-firebase';\nimport { useState, useEffect, useCallback } from 'react';\n\ninterface AuthScheme {\n  isAuthorized: boolean;\n  user: firebase.User;\n  loginByEmail: (email: string, password: string) => Promise<firebase.auth.UserCredential>;\n  logout: () => Promise<void>;\n}\nexport function useAuth(): AuthScheme {\n  const [currentUser, setCurrentUser] = useState(firebase.auth?.().currentUser);\n\n  useEffect(() => {\n    firebase.auth?.().onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n  }, []);\n\n  const loginByEmail = useCallback((email: string, password: string) => {\n    return firebase.auth?.().signInWithEmailAndPassword(email, password);\n  }, []);\n\n  const logout = useCallback(() => {\n    return firebase.auth?.().signOut();\n  }, []);\n\n  return {\n    isAuthorized: Boolean(currentUser),\n    user: currentUser,\n    loginByEmail,\n    logout,\n  };\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { useAuth } from 'hooks/useAuth';\nimport { useEffect, useCallback, useState } from 'react';\nimport { navigate } from 'gatsby';\n\nconst Logout = () => {\n  const { isAuthorized, logout } = useAuth();\n  const [isLoading, setLoadingFlag] = useState(false);\n\n  const backToMainAfterlogout = useCallback(async () => {\n    setLoadingFlag(true);\n    await logout();\n    navigate('/');\n    setLoadingFlag(false);\n  }, [logout]);\n\n  useEffect(() => {\n    if (isAuthorized) {\n      backToMainAfterlogout();\n    } else if (!isLoading) {\n      navigate('/login');\n    }\n  }, [backToMainAfterlogout, isAuthorized, isLoading]);\n\n  return <div />;\n};\n\nexport default Logout;\n"],"sourceRoot":""}