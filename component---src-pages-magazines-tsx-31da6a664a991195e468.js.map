{"version":3,"sources":["webpack:///./src/components/Cards/MagazineCard.tsx","webpack:///./src/pages/magazines.tsx"],"names":["MagazineCard","magazine","path","fields","frontmatter","title","date","thumbnail","AnimatedListItem","to","Body","Row","Col","xs","css","fixed","childImageSharp","Title","Subtitle","pageQuery","Magazines","magazineList","data","allMdx","edges","filter","edge","Boolean","node","Page","pageName","description","showTitle","Container","map","key","id","sm","md","lg"],"mappings":"gcAYA,IAiCeA,EAjCM,SAAC,GAAwB,MAAtBC,EAAsB,EAAtBA,SAEVC,EAERD,EAFFE,OAAUD,KAFgC,EAIxCD,EADFG,YAAeC,EAH2B,EAG3BA,MAAOC,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,UAE9B,OACE,YAACC,EAAA,EAAD,KACE,YAAC,OAAD,CAAMC,GAAIP,GACR,YAAC,IAAD,KACE,YAAC,IAAKQ,KAAN,KACE,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKC,GAAG,QACLN,GACC,YAAC,IAAD,CACEO,IAAKA,YAAF,KAGHC,MAAOR,SAAF,UAAEA,EAAWS,uBAAb,aAAE,EAA4BD,SAIzC,YAACH,EAAA,EAAD,KACE,YAAC,IAAKK,MAAN,KAAaZ,GACb,YAAC,IAAKa,SAAN,KAAgBZ,UC3BnBa,EAAY,aAqDVC,UApBG,SAAC,GAIN,IACLC,EADK,EAHXC,KACEC,OAAUC,MAGeC,QAAO,SAAAC,GAAI,OAAIC,QAAQD,EAAKE,KAAKxB,YAAYE,SACxE,OACE,YAACuB,EAAA,EAAD,CAAMC,SAAS,YAAYC,YAAY,uBAAuBC,WAAW,GACvE,YAACC,EAAA,EAAD,KACE,YAACtB,EAAA,EAAD,KACGU,EAAaa,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OAChB,YAAChB,EAAA,EAAD,CAAKuB,IAAKP,EAAKQ,GAAIvB,GAAI,GAAIwB,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7C,YAAC,EAAD,CAActC,SAAU2B","file":"component---src-pages-magazines-tsx-31da6a664a991195e468.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport Card from 'src/components/Cards';\nimport { Row, Col } from 'react-bootstrap';\nimport { Magazine } from 'src/models';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\nimport AnimatedListItem from 'src/components/Animated/AnimatedListItem';\n\ninterface Props {\n  magazine: Magazine;\n}\nconst MagazineCard = ({ magazine }: Props) => {\n  const {\n    fields: { path },\n    frontmatter: { title, date, thumbnail },\n  } = magazine;\n  return (\n    <AnimatedListItem>\n      <Link to={path}>\n        <Card>\n          <Card.Body>\n            <Row>\n              <Col xs=\"auto\">\n                {thumbnail && (\n                  <Image\n                    css={css`\n                      border-radius: 0.5rem;\n                    `}\n                    fixed={thumbnail?.childImageSharp?.fixed}\n                  />\n                )}\n              </Col>\n              <Col>\n                <Card.Title>{title}</Card.Title>\n                <Card.Subtitle>{date}</Card.Subtitle>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Link>\n    </AnimatedListItem>\n  );\n};\n\nexport default MagazineCard;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport Page from 'src/layout/Page';\nimport { graphql } from 'gatsby';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Magazine } from 'src/models';\nimport MagazineCard from 'src/components/Cards/MagazineCard';\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          fields {\n            path\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                fixed(width: 100, height: 100, cropFocus: CENTER) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface Props {\n  data: {\n    allMdx: {\n      edges: Array<{ node: Magazine }>;\n    };\n  };\n}\nconst Magazines = ({\n  data: {\n    allMdx: { edges },\n  },\n}: Props) => {\n  const magazineList = edges.filter(edge => Boolean(edge.node.frontmatter.date));\n  return (\n    <Page pageName=\"Magazines\" description=\"루비콘의 에피소드가 담긴 포스팅입니다\" showTitle={true}>\n      <Container>\n        <Row>\n          {magazineList.map(({ node }) => (\n            <Col key={node.id} xs={12} sm={12} md={12} lg={12}>\n              <MagazineCard magazine={node} />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </Page>\n  );\n};\nexport default Magazines;\n"],"sourceRoot":""}